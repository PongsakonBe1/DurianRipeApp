name: Build APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git openjdk-17-jdk unzip wget curl build-essential libssl-dev libffi-dev python3-pip

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV

      - name: Setup Android SDK & Legacy NDK (r21e)
        run: |
          mkdir -p $HOME/.buildozer/android/platform/android-sdk/cmdline-tools
          cd $HOME/.buildozer/android/platform/android-sdk/cmdline-tools

          # ดาวน์โหลดและแตก Android Commandline Tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools-linux-9477386_latest.zip
          rm commandlinetools-linux-9477386_latest.zip

          mv cmdline-tools cmdline-tools-temp
          mv cmdline-tools-temp latest

          export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH

          yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses || true

          # ติดตั้ง platform-tools, platforms และ build-tools (เวอร์ชันเดิม)
          sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2"

          # ดาวน์โหลด legacy NDK r21e (มี gcc/gfortran)
          wget https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
          unzip android-ndk-r21e-linux-x86_64.zip -d $HOME/.buildozer/android/platform/android-sdk/ndk/
          rm android-ndk-r21e-linux-x86_64.zip

          echo "ANDROIDNDK=$HOME/.buildozer/android/platform/android-sdk/ndk/android-ndk-r21e" >> $GITHUB_ENV
          echo "LEGACY_NDK=$HOME/.buildozer/android/platform/android-sdk/ndk/android-ndk-r21e" >> $GITHUB_ENV
          echo "ANDROIDAPI=33" >> $GITHUB_ENV
          echo "ANDROIDSDK=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Create legacy tools symlink for sdkmanager compatibility
        run: |
          mkdir -p $HOME/.buildozer/android/platform/android-sdk/tools/bin
          ln -sf $HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager $HOME/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager
          ln -sf $HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/avdmanager $HOME/.buildozer/android/platform/android-sdk/tools/bin/avdmanager

      - name: Clone python-for-android repo
        run: |
          mkdir -p ./.buildozer/android/platform
          cd ./.buildozer/android/platform
          if [ ! -d "python-for-android" ]; then
            git clone https://github.com/kivy/python-for-android.git
          else
            cd python-for-android
            git pull
          fi

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install buildozer==1.5.0 cython==0.29.33 colorama appdirs sh jinja2 six packaging toml

      - name: Install python-for-android locally
        run: |
          pip install -e ./.buildozer/android/platform/python-for-android

      - name: Clean previous build files (exclude python-for-android)
        run: |
          rm -rf ./.buildozer/android/platform/build-*/
          rm -rf ./.buildozer/android/app
          rm -rf ./.buildozer/android/platform/build-*/

      - name: Build APK
        working-directory: ${{ github.workspace }}
        env:
          ANDROIDSDK: ${{ env.ANDROIDSDK }}
          ANDROIDNDK: ${{ env.ANDROIDNDK }}
          LEGACY_NDK: ${{ env.LEGACY_NDK }}
          ANDROIDAPI: ${{ env.ANDROIDAPI }}
          JAVA_HOME: ${{ env.JAVA_HOME }}
          PATH: ${{ env.PATH }}:${{ env.JAVA_HOME }}/bin
        run: |
          buildozer android clean
          buildozer android debug

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: bin/*.apk
          retention-days: 30

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: .buildozer/android/platform/build-*/
          retention-days: 7
